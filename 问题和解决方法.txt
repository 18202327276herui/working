1，webView访问https网页要加证书：

 mWebView.setWebViewClient(new WebViewClient(){
   public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {
        super.onReceivedSslError(view, handler, error);
        handler.proceed();  // 接受所有网站的证书
   }
});

2，webView 获取数据之前要登录网页。

3，使用Glide加载网络图片时，如果url没变，但是图片已经变了，Glide不会加载新的图片，它会缓存之前加载的
图片。
解决方法：
添加.diskCacheStrategy(DiskCacheStrategy.NONE) 不使用缓存。
如：
        Glide.with(this).load(APIConstant.USUNG_HOST + user.getFaceUrl())
                .asBitmap()
                .diskCacheStrategy(DiskCacheStrategy.NONE)
                .placeholder(R.mipmap.img_team_default_user)
                .into(img_head);
	clearImageDiskCache（）；

    /**
     * 清除图片磁盘缓存
     */
    public void clearImageDiskCache() {
        Glide.get(getActivity()).clearMemory();

        try {
            if (Looper.myLooper() == Looper.getMainLooper()) { //只能在非主线程执行
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Glide.get(getActivity()).clearDiskCache();
                    }
                });
            } else {
                Glide.get(getActivity()).clearDiskCache();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

4,ExpandableListView 改变箭头方向
在 getGroupView（）中加：
        //箭头方向
        if (isExpanded) {
            Drawable drawable = activity.getResources().getDrawable(R.mipmap.arrow_up);
            drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight()); //设置边界
            viewHolder.txt_company.setCompoundDrawables(null, null, drawable, null);//画在右边
        } else {
            Drawable drawable = activity.getResources().getDrawable(R.mipmap.arrow_down);
            drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight()); //设置边界
            viewHolder.txt_company.setCompoundDrawables(null, null, drawable, null);//画在右边
        }

5，webView 自适应界面
        // 打开页面时， 自适应屏幕：
        mWebView.getSettings().setUseWideViewPort(true); //设置此属性，可任意比例缩放
        mWebView.getSettings().setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);
        mWebView.getSettings().setLoadWithOverviewMode(true);